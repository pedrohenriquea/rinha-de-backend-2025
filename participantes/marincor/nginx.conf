worker_processes auto;

events {
    use epoll;
    worker_connections 512;
}

http {
    access_log off;
    
    # === TIMEOUTS CRÍTICOS ===
    proxy_connect_timeout 30s;     # Tempo para conectar no backend
    proxy_send_timeout 30s;        # Tempo para enviar request
    proxy_read_timeout 30s;        # Tempo para ler response
    
    # Client timeouts
    client_body_timeout 30s;       # Corpo da requisição
    client_header_timeout 30s;     # Headers da requisição
    send_timeout 30s;              # Envio da response
    
    # Keepalive
    keepalive_timeout 75s;         # Conexão cliente fica viva
    keepalive_requests 1000;       # Requests por conexão

    upstream api {
        server api01:5000 max_fails=3 fail_timeout=10s;
        server api02:5000 max_fails=3 fail_timeout=10s;
        keepalive 1000;            # Aumenta pool de conexões
        keepalive_requests 1000;   # Requests por conexão upstream
        keepalive_timeout 60s;     # Timeout das conexões keepalive
    }
    
    server {
        listen 9999;
        
        location / {
            proxy_buffering off;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_set_header Keep-Alive "";
            proxy_set_header Proxy-Connection "keep-alive";
            
            # === TIMEOUTS ESPECÍFICOS DO PROXY ===
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_next_upstream_timeout 30s;
            
            # === RETRY LOGIC ===
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 3;
            
            proxy_pass http://api;
        }
    }
}
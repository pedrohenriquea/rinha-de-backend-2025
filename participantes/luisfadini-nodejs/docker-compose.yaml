services:
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    deploy:
      resources:
        limits:
          cpus: 0.3
          memory: 60MB

  backend1: &backend1
    image: ghcr.io/luisfadini/rinha-backend-2025:backend
    environment:
      - REDIS_URL=redis://redis:6379
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "fetch('http://localhost:9999/healthcheck').then(res => process.exit(res.ok ? 0 : 1)).catch(() => process.exit(1))",
        ]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: 0.3
          memory: 75MB

  backend2:
    <<: *backend1

  worker:
    image: ghcr.io/luisfadini/rinha-backend-2025:worker
    environment:
      - REDIS_URL=redis://redis:6379
      - PAYMENT_PROCESSOR_DEFAULT=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_FALLBACK=http://payment-processor-fallback:8080
    networks:
      - backend
      - payment-processor
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: 0.4
          memory: 100MB

  nginx:
    image: nginx:latest
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend
    depends_on:
      backend1:
        condition: service_healthy
      backend2:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 0.2
          memory: 40MB

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
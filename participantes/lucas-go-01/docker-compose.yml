# Docker Compose para Rinha de Backend 2025
# Limites: 1.5 CPU + 350MB RAM

networks:
  rinha-network:
    driver: bridge
  payment-processor:
    external: true

x-postgres-config: &postgres-config
  image: postgres:15-alpine
  environment:
    POSTGRES_DB: rinha
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: root
  volumes:
    - postgres_data:/var/lib/postgresql/data
    - ./sql/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
  command: >
    postgres
    -c fsync=off
    -c synchronous_commit=off
    -c full_page_writes=off
    -c logging_collector=off
    -c log_statement=none
    -c max_connections=200
    -c shared_buffers=64MB
    -c effective_cache_size=256MB
    -c maintenance_work_mem=16MB
    -c checkpoint_completion_target=0.9
    -c wal_buffers=16MB
    -c default_statistics_target=100
    -c random_page_cost=1.1
    -c effective_io_concurrency=200
    -c work_mem=4MB
    -c min_wal_size=1GB
    -c max_wal_size=4GB
  deploy:
    resources:
      limits:
        cpus: "0.3"
        memory: "100MB"
      reservations:
        cpus: "0.1"
        memory: "50MB"
  healthcheck:
    test: ["CMD", "pg_isready", "-U", "postgres", "-d", "rinha"]
    interval: 5s
    timeout: 3s
    retries: 5

x-common-environment: &common-environment
  DATABASE_URL: postgres://postgres:root@postgres:5432/rinha
  API_PORT: 8080
  PROCESSOR_DEFAULT_URL: http://payment-processor-default:8080
  PROCESSOR_FALLBACK_URL: http://payment-processor-fallback:8080

x-api-config: &api-config
  image: lucasportos/rinha-go-2025:api
  depends_on:
    postgres:
      condition: service_healthy
  environment:
    <<: *common-environment
  networks:
    - rinha-network
    - payment-processor
  deploy:
    resources:
      limits:
        cpus: "0.3"
        memory: "70MB"
      reservations:
        cpus: "0.1"
        memory: "35MB"
  restart: unless-stopped
  healthcheck:
    test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/healthcheck"]
    interval: 5s
    timeout: 3s
    retries: 5

services:
  postgres:
    <<: *postgres-config
    container_name: rinha-postgres
    ports:
      - "5432:5432"
    networks:
      - rinha-network

  api-1:
    <<: *api-config
    container_name: rinha-api-1
    ports:
      - "8080:8080"
    environment:
      <<: *common-environment

  api-2:
    <<: *api-config
    container_name: rinha-api-2
    ports:
      - "8081:8080"
    environment:
      <<: *common-environment

  worker:
    image: lucasportos/rinha-go-2025:worker
    container_name: rinha-worker
    environment:
      <<: *common-environment
    networks:
      - rinha-network
      - payment-processor
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "80MB"
        reservations:
          cpus: "0.1"
          memory: "40MB"
    restart: unless-stopped

  haproxy:
    image: haproxy:2.8-alpine
    container_name: rinha-haproxy
    ports:
      - "9999:80"
      - "9797:9797"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "25MB"
        reservations:
          cpus: "0.05"
          memory: "10MB"
    depends_on:
      api-1:
        condition: service_healthy
      api-2:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9797"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - rinha-network

volumes:
  postgres_data: 
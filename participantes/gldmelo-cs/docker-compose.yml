services:
  api01: &api
    image: gldmelo/rinhabackend2025:1.0
    #image: rinhabackend2025:dev
    container_name: api01
    expose:
      - "8080"
    environment:
      - UseWorker=true
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionString=Server=db;Port=5432;Database=rinha;User Id=admin;Password=123;Pooling=true;Minimum Pool Size=15;Maximum Pool Size=50;No Reset On Close=true;Multiplexing=true
      - RedisServer=redis-rinha2025:6379
      - PaymentProcessorDefaultUrl=http://payment-processor-default:8080
      - PaymentProcessorFallbackUrl=http://payment-processor-fallback:8080
    networks:
      - backend
      - payment-processor
    depends_on:
      - redis-rinha2025
    deploy:
      resources:
        limits:
          cpus: "0.70"
          memory: "80MB"

  api02:
    <<: *api
    container_name: api02
    depends_on: 
      - redis-rinha2025
    expose:
      - "8080"
    environment:
      - UseWorker=false
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionString=Server=db;Port=5432;Database=rinha;User Id=admin;Password=123;Pooling=true;Minimum Pool Size=15;Maximum Pool Size=50;No Reset On Close=true;Multiplexing=true
      - RedisServer=redis-rinha2025:6379
      - PaymentProcessorDefaultUrl=http://payment-processor-default:8080
      - PaymentProcessorFallbackUrl=http://payment-processor-fallback:8080
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.40"
          memory: "50MB"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    networks:
      - backend
      - payment-processor
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "20MB"

  redis-rinha2025:
    image: valkey/valkey:8.1.3-alpine3.22 #redis:7.2-alpine
    container_name: redis-rinha2025
    ports:
      - "6389:6379"
    command: redis-server --save "" --appendonly no --maxclients 20000
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "20MB"

  db:
    image: postgres:18beta1-bookworm
    hostname: db
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf" ]
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "150MB"

networks:
  backend:
    driver: bridge
    driver_opts:
     com.docker.network.driver.mtu: 1024
  payment-processor:
    external: true
  
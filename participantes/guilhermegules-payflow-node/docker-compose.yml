x-common-env: &common-env
  NODE_ENV: production
  DATABASE_URL: postgresql://postgres:postgres@db:5432/rinha
  REDIS_URL: redis://redis:6379
  PAYMENT_PROCESSOR_URL_DEFAULT: http://payment-processor-default:8080
  PAYMENT_PROCESSOR_URL_FALLBACK: http://payment-processor-fallback:8080

x-common-depends: &common-depends
  db:
    condition: service_healthy
  redis:
    condition: service_healthy

x-common-networks: &common-networks
  - backend
  - payment-processor

services:
  api-1:
    image: guilhermegules/rinha-node:latest
    container_name: api-1
    command: npm run start:api
    environment:
      <<: *common-env
      PORT: 3000
    networks: *common-networks
    depends_on: *common-depends
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "60MB"

  api-2:
    image: guilhermegules/rinha-node:latest
    container_name: api-2
    command: npm run start:api
    environment:
      <<: *common-env
      PORT: 3000
    networks: *common-networks
    depends_on: *common-depends
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "60MB"

  worker:
    image: guilhermegules/rinha-node:latest
    command: npm run start:worker
    container_name: worker
    environment: *common-env
    networks: *common-networks
    depends_on: *common-depends
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "70MB"

  redis:
    image: redis:7-alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "50MB"

  db:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./sql/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "80MB"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "9999:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-1
      - api-2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "30MB"
    healthcheck:
      test: [
          "CMD-SHELL",
          "curl -fsS -G http://localhost/payments-summary \
          --data-urlencode from=$(date +%F) \
          --data-urlencode to=$(date +%F)",
        ]
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

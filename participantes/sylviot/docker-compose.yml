services:
  rinha1: &api
    hostname: rinha1
    image: sylviot/rinha:2025-api-v1
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --unix-socket /tmp/sockets/rinha1.sock http://localhost/payments-summary || exit 1
      # test: curl --unix-socket /tmp/sockets/rinha1.sock http://localhost/payments-summary || exit 1
      interval: 10s
      timeout: 50s
      retries: 3
      start_period: 5s
    networks:
      - backend
      - payment-processor
    volumes:
      - sockets:/tmp/sockets:rw
    environment:
      - SOCK=rinha1.sock
      - ConnectionStrings__Postgres=Host=db:5432;Database=rinha;User ID=postgres;Password=secret;No Reset On Close=true;Max Auto Prepare=10;Auto Prepare Min Usages=1;Pooling=true;Maximum Pool Size=100
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"
  rinha2:
    <<: *api
    hostname: rinha2
    healthcheck:
      test: curl --unix-socket /tmp/sockets/rinha2.sock http://localhost/payments-summary || exit 1
      # test: curl --unix-socket /tmp/sockets/rinha2.sock http://localhost/payments-summary || exit 1
      interval: 10s
      timeout: 50s
      retries: 3
      start_period: 5s
    environment:
      - SOCK=rinha2.sock
      - ConnectionStrings__Postgres=Host=db:5432;Database=rinha;User ID=postgres;Password=secret;No Reset On Close=true;Max Auto Prepare=10;Auto Prepare Min Usages=1;Pooling=true;Maximum Pool Size=100;
  rinha3:
    <<: *api
    hostname: rinha3
    healthcheck:
      test: curl --unix-socket /tmp/sockets/rinha3.sock http://localhost/payments-summary || exit 1
      # test: curl --unix-socket /tmp/sockets/rinha3.sock http://localhost/payments-summary || exit 1
      interval: 10s
      timeout: 50s
      retries: 3
      start_period: 5s
    environment:
      - SOCK=rinha3.sock
      - ConnectionStrings__Postgres=Host=db:5432;Database=rinha;User ID=postgres;Password=secret;No Reset On Close=true;Max Auto Prepare=10;Auto Prepare Min Usages=1;Pooling=true;Maximum Pool Size=100;

  rinhaw1: &worker
    hostname: rinhaw1
    image: sylviot/rinha:2025-worker-v1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    environment:
      - ConnectionStrings__Postgres=Host=db:5432;Database=rinha;User ID=postgres;Password=secret;No Reset On Close=true;Max Auto Prepare=10;Auto Prepare Min Usages=1;Pooling=true;Maximum Pool Size=100
      - ChannelName=payment_transaction_primary
      - ExternalServices__Gateway__Url=http://payment-processor-default:8080
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "40MB"
  rinhaw2:
    <<: *worker
    hostname: rinhaw2
    environment:
      - ConnectionStrings__Postgres=Host=db:5432;Database=rinha;User ID=postgres;Password=secret;No Reset On Close=true;Max Auto Prepare=10;Auto Prepare Min Usages=1;Pooling=true;Maximum Pool Size=100
      - ChannelName=payment_transaction_fallback
      - ExternalServices__Gateway__Url=http://payment-processor-fallback:8080

  db:
    image: postgres:alpine
    hostname: db
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - ./postgres.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rinha"]
      interval: 5s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "70MB"

  haproxy:
    image: haproxy:3.2.3-alpine
    ports:
      - 9999:9999
    volumes:
      - sockets:/tmp/sockets
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - backend
      - payment-processor
    depends_on:
      rinha1:
        condition: service_healthy
      rinha2:
        condition: service_healthy
      rinha3:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 100084
        hard: 100084
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "80MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  sockets:
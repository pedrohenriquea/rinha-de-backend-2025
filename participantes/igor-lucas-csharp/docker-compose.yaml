x-service-templates:
  backend: &backend
    image: ghcr.io/igorlucasassuncao/rinha-backend:latest
   # build: .
    depends_on:
      - rinha-db
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "95MB"
    networks:
      - backend
      - payment-processor
    volumes:
      - socket_data:/tmp

services:
  backend-1:
    <<: *backend
    container_name: backend-1
    hostname: backend-1
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SOCKET_PATH=/tmp/backend_1.sock
      - ConnectionStrings__default=http://payment-processor-default:8080
      - ConnectionStrings__fallback=http://payment-processor-fallback:8080
      - ConnectionStrings__postgres=Host=rinha-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=10;Maximum Pool Size=50;Connection Lifetime=300;Connection Idle Lifetime=60;Command Timeout=30;Cancellation Timeout=30;No Reset On Close=true;Max Auto Prepare=20;Auto Prepare Min Usages=1;Read Buffer Size=8192;Write Buffer Size=8192;Socket Receive Buffer Size=8192;Socket Send Buffer Size=8192
  backend-2:
    <<: *backend
    container_name: backend-2
    hostname: backend-2
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - SOCKET_PATH=/tmp/backend_2.sock
      - ConnectionStrings__default=http://payment-processor-default:8080
      - ConnectionStrings__fallback=http://payment-processor-fallback:8080
      - ConnectionStrings__postgres=Host=rinha-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=10;Maximum Pool Size=50;Connection Lifetime=300;Connection Idle Lifetime=60;Command Timeout=30;Cancellation Timeout=30;No Reset On Close=true;Max Auto Prepare=20;Auto Prepare Min Usages=1;Read Buffer Size=8192;Write Buffer Size=8192;Socket Receive Buffer Size=8192;Socket Send Buffer Size=8192
  
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - socket_data:/tmp
    depends_on:
      - backend-1
      - backend-2
    ports:
      - "9999:8080"
    networks:
      - backend
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  rinha-db:
    image: postgres:17-alpine
    command: postgres -c checkpoint_timeout=600 
           -c max_wal_size=4096 
           -c synchronous_commit=0 
           -c fsync=0 
           -c full_page_writes=0
           -c shared_buffers=128MB
           -c effective_cache_size=256MB
           -c work_mem=8MB
           -c maintenance_work_mem=64MB
           -c wal_buffers=16MB
           -c max_connections=200
           -c random_page_cost=1.1
           -c effective_io_concurrency=200
           -c checkpoint_completion_target=0.9
           -c min_wal_size=80MB
           -c autovacuum_max_workers=2
           -c autovacuum_naptime=30s
    networks:
      - payment-processor
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d rinha" ]
      interval: 1s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "120MB"
  redis:
    image: redis:8-alpine
    restart: always
    hostname: redis
    container_name: redis 
    command: >
      redis-server --save "" --appendonly no --maxclients 1024
                  --maxmemory 10mb --maxmemory-policy allkeys-lru 
                  --stop-writes-on-bgsave-error no --rdbcompression no
                  --hz 100 --tcp-backlog 511 --timeout 0
                  --loglevel warning
    networks:
      - backend
    healthcheck:
          test: ["CMD", "redis-cli", "ping"]
          interval: 2s
          timeout: 2s
          retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '10MB'

volumes:
 socket_data:

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
worker_processes auto;  
worker_rlimit_nofile 2048;  

events {
    worker_connections 1024;  
    use epoll;
    multi_accept on;  
}

http {
    access_log off;
    error_log /dev/null emerg;
    
    # TCP optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Keepalive optimizations
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Buffer optimizations
    client_body_buffer_size 16k;
    client_max_body_size 1m;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 16k;
    
    upstream api {
        least_conn;
        server api01:8080 max_fails=3 fail_timeout=5s;  
        server api02:8080 max_fails=3 fail_timeout=5s;
        keepalive 32;
        keepalive_timeout 60s;
        keepalive_requests 100;
    }
    
    server {
        listen 9999 backlog=512;  # Add backlog
        
        location / {
            proxy_pass http://api;
            proxy_http_version 1.1;
            
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            
            proxy_connect_timeout 10s; 
            proxy_send_timeout 10s;     
            proxy_read_timeout 10s;    
            
            proxy_next_upstream error timeout http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 5s;
            
            proxy_buffering off;  
        }
        
        # Add specific endpoint if needed
        location /payments-summary {
            proxy_pass http://api/payments-summary;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            proxy_buffering off;
        }
        
        # Health check endpoint for nginx itself
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
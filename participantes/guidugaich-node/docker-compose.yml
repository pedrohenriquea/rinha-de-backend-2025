services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    platform: linux/amd64
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:80"
    depends_on:
      - api1
      - api2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"

  api1: &api
    container_name: api1
    image: guidugaich/rinha-backend-nodejs:latest
    hostname: api1
    platform: linux/amd64
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    networks:
      - backend
      - payment-processor
    environment:
      - APP_PORT=9999
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=rinha
      - POSTGRES_PASSWORD=rinha
      - POSTGRES_DB=rinha
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - PAYMENT_PROCESSOR_DEFAULT_HOST=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_FALLBACK_HOST=http://payment-processor-fallback:8080
    deploy:
      resources:
        limits:
          cpus: "0.425"
          memory: "100MB"

  api2:
    <<: *api
    container_name: api2
    hostname: api2

  db:
    container_name: db
    image: postgres:alpine
    hostname: db
    platform: linux/amd64
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rinha -d rinha"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=rinha
      - POSTGRES_USER=rinha
      - POSTGRES_PASSWORD=rinha
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db_init/:/docker-entrypoint-initdb.d/
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "110MB"

  cache:
    container_name: cache
    image: redis:7.2-alpine
    hostname: cache
    platform: linux/amd64
    ports:
      - "6379:6379"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: "20MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  pgdata: {}
worker_processes auto;

events {
    use epoll;
    worker_connections 20000;   # high number of concurrent connections
    multi_accept on;            # accept multiple connections at once
}

http {
    access_log off;             # disable access logs to reduce I/O

    # Upstream servers
    upstream api {
        least_conn;             # distribute load by least connections
        server api1:8080;
        server api2:8081;
        keepalive 250;          # persistent connections to backend
    }

    # Proxy cache (optional, memory-heavy)
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:256m max_size=1g inactive=10m use_temp_path=off;

    server {
        listen 9999;

        # Main API location
        location / {
            proxy_pass http://api;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Connection "";
            proxy_set_header Host $host;

            # Timeouts
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            # Buffers (memory-heavy)
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;          # 8 buffers of 4KB each
            proxy_busy_buffers_size 8k;
            proxy_buffering on;

            # Optional caching
            # proxy_cache my_cache;
            # proxy_cache_valid 200 1m;
        }

        # Optional: Increase client buffer sizes
        client_body_buffer_size 8k;
        client_max_body_size 1m;
    }
}
user nginx;
worker_processes 1;
worker_rlimit_nofile 8192;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" rt=$request_time';

    map $request_uri $log_request {
        ~^/health$ 0;
        default 1;
    }

    access_log /var/log/nginx/access.log main if=$log_request;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;

    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 1k;
    large_client_header_buffers 2 1k;

    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    proxy_connect_timeout 1s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 2;
    gzip_types
        application/json
        text/plain;

    upstream api_backend {
        least_conn;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;

        server worker-1:8080 max_fails=3 fail_timeout=10s;
        server worker-2:8080 max_fails=3 fail_timeout=10s;
    }

    limit_req_zone $binary_remote_addr zone=api:1m rate=1000r/s;
    limit_req_status 429;

    server {
        listen 9999 default_server;
        server_name _;

        limit_req zone=api burst=100 nodelay;

        location /nginx-health {
            access_log off;
            return 200 "nginx OK\n";
            add_header Content-Type text/plain;
        }

        location / {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 1s;
        }
    }

    server {
        listen 9901;
        server_name _;

        location /nginx-status {
            stub_status on;
            access_log off;
            add_header Content-Type text/plain;
        }

        location / {
            return 404;
        }
    }
}
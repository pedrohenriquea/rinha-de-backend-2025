user nginx;
worker_processes 1;
worker_rlimit_nofile 8192;
error_log /dev/stderr crit;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Log format para diagnóstico de performance:
    # rt = request_time (tempo total da requisição)
    # uct = upstream_connect_time (tempo para conectar no backend)
    # uht = upstream_header_time (tempo para receber headers do backend)
    # urt = upstream_response_time (tempo total de resposta do backend)
    # Se rt >> urt = gargalo no nginx
    # Se rt ≈ urt = gargalo no backend
#     log_format timing '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" rt=$request_time uct="$upstream_connect_time" '
#                      'uht="$upstream_header_time" urt="$upstream_response_time"';
#     access_log /dev/stdout timing;

    # Rate limiting para controlar fluxo de POSTs
#     limit_req_zone $binary_remote_addr zone=payments:10m rate=1000r/s;

    access_log off;
    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;
    keepalive_timeout 5;
#     keepalive_requests 1;
    client_body_buffer_size 4K;
    client_header_buffer_size 2k;
    large_client_header_buffers 2 2k;
    resolver 127.0.0.11 valid=5s;

    upstream backend {
        server app1:8080;
        server app2:8080;
        keepalive 32;
    }

    server {
        listen 9999;
        send_timeout 1500ms;
        client_body_timeout 1500ms;
        client_header_timeout 1500ms;

#          location / {
#                     # Resposta direta 200 OK
#                     return 200;
#                     add_header Content-Type application/json;
#                 }

#         location /payments-summary {
#             proxy_pass http://backend/payments-summary;
#             proxy_http_version 1.1;
#             proxy_set_header Connection "";
#             proxy_buffering off;
#             proxy_connect_timeout 3s;
#             proxy_send_timeout 1s;
#             proxy_read_timeout 1500ms;
#             proxy_buffer_size 4k;
#             proxy_buffers 4 4k;
#             proxy_busy_buffers_size 4k;
#             proxy_no_cache 1;
#             proxy_cache_bypass 1;
#             proxy_store off;
#         }

#        location /payments {
#             return 200;
#             mirror /_backend_processor;
#             mirror_request_body on;
#         }
#
#         location = /_backend_processor {
#             internal;
#             proxy_pass http://backend/payments;
#             proxy_http_version 1.1;
#             proxy_set_header Connection "";
#             proxy_set_header Host $host;
#             proxy_buffering off;
#             proxy_connect_timeout 1500ms;
#             proxy_send_timeout 1500ms;
#             proxy_read_timeout 1500ms;
#             proxy_buffer_size 4k;
#             proxy_buffers 4 4k;
#             proxy_busy_buffers_size 4k;
#             proxy_no_cache 1;
#             proxy_cache_bypass 1;
#             proxy_store off;
#         }

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_set_header Connection "keep-alive";
            proxy_connect_timeout 3s;
            proxy_send_timeout 1s;
            proxy_read_timeout 1500ms;
            proxy_buffer_size 4k;
            proxy_buffers 4 4k;
            proxy_busy_buffers_size 4k;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            proxy_store off;
        }
    }
}
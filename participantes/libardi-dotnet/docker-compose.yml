services:
  nginx-lb:
    image: nginx:1.25-alpine
    container_name: payment-lb
    ports:
      - "9999:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      payment-api-1:
        condition: service_healthy
      payment-api-2:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "10MB"

  payment-api-1: &api
    image: libardi/rinha-2025:latest
    container_name: payment-api-1
    hostname: payment-api-1
    environment: &env
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__Postgres: "server=postgres; database=PaymentsDB; user id=user; password=password; pooling=true; maximum pool size=256; multiplexing=true; no reset on close=true; max auto prepare=50; auto prepare min usages=1;"
      Akka__SystemName: "actorSystem"
      Akka__ClusterOptions__SeedNodes__0: "akka.tcp://actorSystem@payment-api-1:8110"
      Akka__ClusterOptions__Roles__0: "actorSystem"
      Akka__RemoteOptions__PublicHostName: "payment-api-1"
      Akka__RemoteOptions__PublicPort: 8110
      PaymentProcessors__Default__BaseUrl: "http://payment-processor-default:8080"
      PaymentProcessors__Fallback__BaseUrl: "http://payment-processor-fallback:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
      - payment-processor
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:8080/healthz || exit 1",
          "curl --fail http://localhost:8080/healthz/akka || exit 1",
        ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "120MB"

  payment-api-2:
    <<: *api
    container_name: payment-api-2
    hostname: payment-api-2
    environment:
      <<: *env
      Akka__ClusterOptions__SeedNodes__0: "akka.tcp://actorSystem@payment-api-2:8110"
      Akka__RemoteOptions__PublicHostName: "payment-api-2"

  postgres:
    image: postgres:15-alpine
    container_name: payment-db
    command: >-
      postgres -c max_connections=400
               -c shared_buffers=512MB
               -c synchronous_commit=off
               -c fsync=off
               -c full_page_writes=off
               -c wal_level=minimal
               -c max_wal_senders=0
               -c max_wal_size=4GB
               -c checkpoint_timeout=30min
               -c log_min_duration_statement=0
    environment:
      POSTGRES_DB: PaymentsDB
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d PaymentsDB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "100MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

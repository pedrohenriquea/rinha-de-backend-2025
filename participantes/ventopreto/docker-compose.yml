x-app-base: &app-base
  image: ventopreto/rinha2025-roda:latest
  environment:
    - DATABASE_URL=postgres://postgres:postgres@db:5432/rinha
    - REDIS_URL=redis://cache:6379
  depends_on:
    db:
      condition: service_healthy
    cache:
      condition: service_started
  volumes:
    - /app/vendor/bundle
  networks:
    - backend

x-api-service: &api-service
  <<: *app-base
  deploy:
    resources:
      limits:
        cpus: '0.25'
        memory: '70M'

x-worker-service: &worker-service
  <<: *app-base
  command: bundle exec ruby worker.rb
  networks:
    - backend
    - payment-processor
  deploy:
    resources:
      limits:
        cpus: '0.25'
        memory: '52M'

services:
  api01:
    <<: *api-service
    container_name: api01
    hostname: api01
    ports:
      - "9292:9292"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9292/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api02:
    <<: *api-service
    container_name: api02
    hostname: api02
    ports:
      - "9293:9292"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9293/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker01:
    <<: *worker-service
    container_name: worker01
    hostname: worker01

  worker02:
    <<: *worker-service
    container_name: worker02
    hostname: worker02

  db:
    container_name: db
    image: postgres:17-alpine
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0 -c random_page_cost=1.1 -c wal_buffers=16MB
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '75M'

  cache:
    container_name: redis
    image: redis:alpine
    command: redis-server --save "" --appendonly no
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '13M'

  load_balancer:
    image: nginx:stable
    container_name: nginx_proxy
    ports:
      - "9999:9999"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '18M'

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

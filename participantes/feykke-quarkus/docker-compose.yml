services:
  redis:
    image: redis:8.0.3-alpine
    ports:
      - "6379:6379"
    command: >
      redis-server
      --maxmemory 100mb
      --save ""
      --appendonly no
      --tcp-keepalive 60
      --hz 20
      --maxclients 1000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "80MB"
    networks:
      - backend-rinha
  api1: &api1
    image: feykke/rinha-backend-2025:1.0.4
    hostname: api1
    environment:
      - BACKEND_TYPE=api
      - QUARKUS_PROFILE=api
      - REDIS_HOST=redis://redis:6379
      - DEFAULT_PROCESSOR_URL=http://payment-processor-default:8080
      - FALLBACK_PROCESSOR_URL=http://payment-processor-fallback:8080
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "90MB"
    networks:
      - backend-rinha
      - payment-processor
  api2:
    <<: *api1
    hostname: api2
  worker1:
    <<: *api1
    hostname: worker1
    environment:
      - QUARKUS_PROFILE=worker
      - BACKEND_TYPE=worker
      - PAYMENT_WORKERS_QTT=16
      - REDIS_HOST=redis://redis:6379
      - DEFAULT_PROCESSOR_URL=http://payment-processor-default:8080
      - FALLBACK_PROCESSOR_URL=http://payment-processor-fallback:8080
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "70MB"
  nginx:
    image: nginx:1.27.0-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    networks:
      - backend-rinha
      - payment-processor
    depends_on:
      - api1
      - api2
      - worker1
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"
networks:
  backend-rinha:
    driver: bridge
  payment-processor:
    external: true